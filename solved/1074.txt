#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <deque>
#include <string>
#include <algorithm>
#include <cmath>
#include <queue>
#include <climits>
#include <map>
#include <set>
using namespace std;
//#define MDEBUG true
#define MMAXLEN 100001
struct node{
    int addr, val, next;
};

node List[MMAXLEN];
int main(void)
{
    int n, step, head = 100000;
    scanf("%d%d%d", &List[head].next, &n, &step);
    for(int i = 0; i < n; i++){
        int a;
        scanf("%d", &a);
        scanf("%d%d", &(List[a].val), &(List[a].next));
        List[a].addr = a;
    }
    int prev = head, p = List[head].next, next;
    while(true){
        vector<int> s;
        for(int i = 0; i < step; i++){
            if(p == -1)
                goto F1;
            s.push_back(p);
            p = List[p].next;
        }
        next = p; int t = s.back(), tmp = s.back();
        while(!s.empty()){
            t = s.back();
            s.pop_back();
            List[t].next = s.empty() ? next : s.back();
        }
        List[prev].next = tmp;
        prev = t;
    }
F1: p = List[head].next;
    while(p != -1){
        if(List[p].next != -1)
            printf("%05d %d %05d\n", p, List[p].val, List[p].next);
        else
            printf("%05d %d -1\n", p, List[p].val);
        p = List[p].next;
    }
    return 0;
}
