#include <cstdio>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <vector>
#include <string>
#include <algorithm>
#include <cmath>
using namespace std;

struct item{
    string id;
    int final_rank,location,local_rank,score;
};

bool cmp_by_score(item a, item b){
    return a.score > b.score;
}

bool cmp_by_rank(item a, item b){
    if(a.final_rank == b.final_rank)
        return a.id < b.id;
    return a.final_rank < b.final_rank;
}

int main(void){
    vector<item> arr;
    vector<item> local_arr;
    int n,k;
    cin>>n;
    for(int i = 0; i < n; i++){
        cin>>k;
        for(int j = 0; j < k; j++){
            item t;
            cin>>t.id>>t.score;
            t.location = i + 1;
            local_arr.push_back(t);
        }
        sort(local_arr.begin(), local_arr.end(), cmp_by_score);
        local_arr[0].local_rank = 1;
        for(int i = 1; i < local_arr.size(); i++){
            if(local_arr[i].score == local_arr[i - 1].score)
                local_arr[i].local_rank = local_arr[i - 1].local_rank;
            else
                local_arr[i].local_rank = i + 1;
        }

        arr.insert(arr.end(), local_arr.begin(), local_arr.end());
        local_arr.clear();
    }

    sort(arr.begin(), arr.end(), cmp_by_score);
    arr[0].final_rank = 1;
    for(int i = 1; i < arr.size(); i++){
        if(arr[i].score == arr[i - 1].score)
            arr[i].final_rank = arr[i - 1].final_rank;
        else
            arr[i].final_rank = i + 1;
    }

    sort(arr.begin(), arr.end(), cmp_by_rank);
    cout<<arr.size()<<endl;

    for(auto i : arr){
        cout<<i.id<<' '<<i.final_rank<<' '<<i.location<<' '<<i.local_rank<<endl;
    }

    return 0;
}
