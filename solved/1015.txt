#include <cstdio>
#include <cstring>
#include <vector>
#include <queue>
#include <string>
using namespace std;

string trans(string a, int from_radix, int to_radix)
{
    long long ta = 0,tb = 1;
    for(int i = a.length() - 1; i >= 0; i--){
        if(isdigit(a[i])){
            ta += (a[i] - '0') * tb;
        }else if(isalpha(a[i])){
            ta += (a[i] - 'a' + 10) * tb;
        }
        tb *= from_radix;
    }

    char ret_c[500];
    int i = 0;
    while(ta > 0){
        int mod_num = (ta % to_radix);
        if(mod_num < 10)
            ret_c[i++] = mod_num + '0';
        else
            ret_c[i++] = mod_num - 10 + 'a';
        ta /= to_radix;
    }
    ret_c[i] = 0;

    for(i = 0; i < strlen(ret_c) / 2; i++){
        char t = ret_c[i];
        ret_c[i] = ret_c[strlen(ret_c) - i - 1];
        ret_c[strlen(ret_c) - i - 1] = t;
    }

    return string(ret_c);
}

bool is_prim(int a)
{
    if(a <= 1)
        return false;
    if(a == 2)
        return true;
    int i;
    for(i = 2; i * i <= a; i++){
        if(a % i == 0)
            return false;
    }
    return true;
}

int m_stoi(string s)
{
    int ret = 0;
    for(int i = 0; i < s.size(); i++){
        ret *= 10;
        ret += (s[i] - '0');
    }
    return ret;
}

int main(void)
{
    int n,d;
    while(scanf("%d", &n) == 1 && n >= 0){
        scanf("%d", &d);
        if(is_prim(n) == false)
            printf("No\n");
        else{
            char str_tmp[20];
            sprintf(str_tmp, "%d", n);
            string t(str_tmp), s;

            s = trans(t, 10, d);
            for(int i = 0; i < s.size() / 2; i++){
                char ct = s[i];
                s[i] = s[s.size() - 1 - i];
                s[s.size() - 1 - i] = ct;
            }
            string sr_n = trans(s, d, 10);
            int ret = m_stoi(sr_n);
            if(is_prim(ret))
                printf("Yes\n");
            else
                printf("No\n");
        }
    }

    return 0;
}
